{"remainingRequest":"/Users/nathanctodd/Desktop/CS260/CreativeProject5/museum-nathanctodd/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/nathanctodd/Desktop/CS260/CreativeProject5/museum-nathanctodd/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nathanctodd/Desktop/CS260/CreativeProject5/museum-nathanctodd/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nathanctodd/Desktop/CS260/CreativeProject5/museum-nathanctodd/front-end/src/views/Admin.vue?vue&type=template&id=54c38a05&scoped=true&","dependencies":[{"path":"/Users/nathanctodd/Desktop/CS260/CreativeProject5/museum-nathanctodd/front-end/src/views/Admin.vue","mtime":1648961533540},{"path":"/Users/nathanctodd/Desktop/CS260/CreativeProject5/museum-nathanctodd/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1648309946459},{"path":"/Users/nathanctodd/Desktop/CS260/CreativeProject5/museum-nathanctodd/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1648309947114},{"path":"/Users/nathanctodd/Desktop/CS260/CreativeProject5/museum-nathanctodd/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1648309946459},{"path":"/Users/nathanctodd/Desktop/CS260/CreativeProject5/museum-nathanctodd/front-end/node_modules/vue-loader/lib/index.js","mtime":1648309946958}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}